/******************************************************************************/
/* DISCLAIMER                                                                 */
/* This software is supplied by Renesas Electronics Corporation and is only   */
/* intended for use with Renesas products. No other uses are authorized.This  */
/* software is owned by Renesas Electronics Corporation and is protected      */
/* under all applicable laws, including copyright laws.                       */
/* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES          */
/* REGARDING THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING  */
/* BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR */
/* PURPOSE AND NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY           */
/* DISCLAIMED.                                                                */
/* TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS     */
/* ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE       */
/* LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL      */
/* DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS    */
/* AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.           */
/* Renesas reserves the right, without notice, to make changes to this        */
/* software and to discontinue the availability of this software.             */
/* By using this software, you agree to the additional terms and conditions   */
/* found by accessing the following link:                                     */
/* http://www.renesas.com/disclaimer                                          */
/*                                                                            */
/* Device     : RL78/R5F1056A                                                 */
/* File Name  : iodefine.h                                                    */
/* Abstract   : Definition of Special Function Register (SFR)                 */
/* History    : V1.20  [Device File version]                                  */
/* Options    : -df=C:\Program Files (x86)\Renesas Electronics\CS+\CC\Device\ */
/*              RL78\Devicefile\DR5F1056A.DVF -o=C:\Users\gnjtkhs\Desktop\Mic */
/*              ro\my_program\RL78\G11\DCC\TETSU_CON_G11\TETSU_CON_G11\iodefi */
/*              ne.h -f                                                       */
/* Date       : 2022/09/07                                                    */
/* Version    : V1.12.00.01  [df2iodef.exe version]                           */
/* This is a typical example.                                                 */
/*                                                                            */
/******************************************************************************/
#ifndef __R5F1056AIODEFINE_HEADER__
#define __R5F1056AIODEFINE_HEADER__

typedef struct
{
    unsigned char no0:1;
    unsigned char no1:1;
    unsigned char no2:1;
    unsigned char no3:1;
    unsigned char no4:1;
    unsigned char no5:1;
    unsigned char no6:1;
    unsigned char no7:1;
} __bitf_T;

typedef struct
{
    unsigned char no0:1;
    unsigned char no1:1;
    unsigned char no2:1;
    unsigned char no3:1;
    unsigned char no4:1;
    unsigned char no5:1;
    unsigned char no6:1;
    unsigned char no7:1;
    unsigned char no8:1;
    unsigned char no9:1;
    unsigned char no10:1;
    unsigned char no11:1;
    unsigned char no12:1;
    unsigned char no13:1;
    unsigned char no14:1;
    unsigned char no15:1;
} __bitf_T2;



#define ADM2           (*(volatile __near unsigned char  *)0x10)
#define ADM2_bit       (*(volatile __near __bitf_T *)0x10)
#define ADTYP          (((volatile __near __bitf_T *)0x10)->no0)
#define AWC            (((volatile __near __bitf_T *)0x10)->no2)
#define ADRCK          (((volatile __near __bitf_T *)0x10)->no3)
#define ADUL           (*(volatile __near unsigned char  *)0x11)
#define ADLL           (*(volatile __near unsigned char  *)0x12)
#define ADTES          (*(volatile __near unsigned char  *)0x13)
#define PU0            (*(volatile __near unsigned char  *)0x30)
#define PU0_bit        (*(volatile __near __bitf_T *)0x30)
#define PU3            (*(volatile __near unsigned char  *)0x33)
#define PU3_bit        (*(volatile __near __bitf_T *)0x33)
#define PU4            (*(volatile __near unsigned char  *)0x34)
#define PU4_bit        (*(volatile __near __bitf_T *)0x34)
#define PU5            (*(volatile __near unsigned char  *)0x35)
#define PU5_bit        (*(volatile __near __bitf_T *)0x35)
#define PU12           (*(volatile __near unsigned char  *)0x3C)
#define PU12_bit       (*(volatile __near __bitf_T *)0x3C)
#define PIM0           (*(volatile __near unsigned char  *)0x40)
#define PIM0_bit       (*(volatile __near __bitf_T *)0x40)
#define PIM3           (*(volatile __near unsigned char  *)0x43)
#define PIM3_bit       (*(volatile __near __bitf_T *)0x43)
#define PIM4           (*(volatile __near unsigned char  *)0x44)
#define PIM4_bit       (*(volatile __near __bitf_T *)0x44)
#define PIM5           (*(volatile __near unsigned char  *)0x45)
#define PIM5_bit       (*(volatile __near __bitf_T *)0x45)
#define POM0           (*(volatile __near unsigned char  *)0x50)
#define POM0_bit       (*(volatile __near __bitf_T *)0x50)
#define POM3           (*(volatile __near unsigned char  *)0x53)
#define POM3_bit       (*(volatile __near __bitf_T *)0x53)
#define POM4           (*(volatile __near unsigned char  *)0x54)
#define POM4_bit       (*(volatile __near __bitf_T *)0x54)
#define POM5           (*(volatile __near unsigned char  *)0x55)
#define POM5_bit       (*(volatile __near __bitf_T *)0x55)
#define PMC0           (*(volatile __near unsigned char  *)0x60)
#define PMC0_bit       (*(volatile __near __bitf_T *)0x60)
#define PMC2           (*(volatile __near unsigned char  *)0x62)
#define PMC2_bit       (*(volatile __near __bitf_T *)0x62)
#define PMC3           (*(volatile __near unsigned char  *)0x63)
#define PMC3_bit       (*(volatile __near __bitf_T *)0x63)
#define PMC5           (*(volatile __near unsigned char  *)0x65)
#define PMC5_bit       (*(volatile __near __bitf_T *)0x65)
#define NFEN0          (*(volatile __near unsigned char  *)0x70)
#define NFEN0_bit      (*(volatile __near __bitf_T *)0x70)
#define NFEN1          (*(volatile __near unsigned char  *)0x71)
#define NFEN1_bit      (*(volatile __near __bitf_T *)0x71)
#define ISC            (*(volatile __near unsigned char  *)0x73)
#define ISC_bit        (*(volatile __near __bitf_T *)0x73)
#define SSIE00         (((volatile __near __bitf_T *)0x73)->no7)
#define TIS0           (*(volatile __near unsigned char  *)0x74)
#define PIOR2          (*(volatile __near unsigned char  *)0x75)
#define PIOR0          (*(volatile __near unsigned char  *)0x77)
#define IAWCTL         (*(volatile __near unsigned char  *)0x78)
#define PIOR1          (*(volatile __near unsigned char  *)0x79)
#define PMS            (*(volatile __near unsigned char  *)0x7B)
#define PMS_bit        (*(volatile __near __bitf_T *)0x7B)
#define PIOR3          (*(volatile __near unsigned char  *)0x7C)
#define DFLCTL         (*(volatile __near unsigned char  *)0x90)
#define DFLCTL_bit     (*(volatile __near __bitf_T *)0x90)
#define DFLEN          (((volatile __near __bitf_T *)0x90)->no0)
#define HIOTRM         (*(volatile __near unsigned char  *)0xA0)
#define HOCODIV        (*(volatile __near unsigned char  *)0xA8)
#define FLMODE         (*(volatile __near unsigned char  *)0xAA)
#define FLMODE_bit     (*(volatile __near __bitf_T *)0xAA)
#define CFLSTOP        (((volatile __near __bitf_T *)0xAA)->no0)
#define MODE0          (((volatile __near __bitf_T *)0xAA)->no6)
#define MODE1          (((volatile __near __bitf_T *)0xAA)->no7)
#define FLMWRP         (*(volatile __near unsigned char  *)0xAB)
#define FLMWRP_bit     (*(volatile __near __bitf_T *)0xAB)
#define FLMWEN         (((volatile __near __bitf_T *)0xAB)->no0)
#define PER0           (*(volatile __near unsigned char  *)0xF0)
#define PER0_bit       (*(volatile __near __bitf_T *)0xF0)
#define TAU0EN         (((volatile __near __bitf_T *)0xF0)->no0)
#define SAU0EN         (((volatile __near __bitf_T *)0xF0)->no2)
#define IICA0EN        (((volatile __near __bitf_T *)0xF0)->no4)
#define ADCEN          (((volatile __near __bitf_T *)0xF0)->no5)
#define IICA1EN        (((volatile __near __bitf_T *)0xF0)->no6)
#define PRR0           (*(volatile __near unsigned char  *)0xF1)
#define PRR0_bit       (*(volatile __near __bitf_T *)0xF1)
#define TAU0RES        (((volatile __near __bitf_T *)0xF1)->no0)
#define SAU0RES        (((volatile __near __bitf_T *)0xF1)->no2)
#define IICA0RES       (((volatile __near __bitf_T *)0xF1)->no4)
#define ADCRES         (((volatile __near __bitf_T *)0xF1)->no5)
#define IICA1RES       (((volatile __near __bitf_T *)0xF1)->no6)
#define MOCODIV        (*(volatile __near unsigned char  *)0xF2)
#define OSMC           (*(volatile __near unsigned char  *)0xF3)
#define OSMC_bit       (*(volatile __near __bitf_T *)0xF3)
#define WUTMMCK0       (((volatile __near __bitf_T *)0xF3)->no4)
#define RPECTL         (*(volatile __near unsigned char  *)0xF5)
#define RPECTL_bit     (*(volatile __near __bitf_T *)0xF5)
#define RPEF           (((volatile __near __bitf_T *)0xF5)->no0)
#define RPERDIS        (((volatile __near __bitf_T *)0xF5)->no7)
#define PMMC           (*(volatile __near unsigned char  *)0xF8)
#define PMMC_bit       (*(volatile __near __bitf_T *)0xF8)
#define MCSEL          (((volatile __near __bitf_T *)0xF8)->no6)
#define PER1           (*(volatile __near unsigned char  *)0xFA)
#define PER1_bit       (*(volatile __near __bitf_T *)0xFA)
#define PGA0EN         (((volatile __near __bitf_T *)0xFA)->no2)
#define DTCEN          (((volatile __near __bitf_T *)0xFA)->no3)
#define CMPEN          (((volatile __near __bitf_T *)0xFA)->no5)
#define DACEN          (((volatile __near __bitf_T *)0xFA)->no7)
#define PRR1           (*(volatile __near unsigned char  *)0xFB)
#define PRR1_bit       (*(volatile __near __bitf_T *)0xFB)
#define PGA0RES        (((volatile __near __bitf_T *)0xFB)->no2)
#define CMPRES         (((volatile __near __bitf_T *)0xFB)->no5)
#define DACRES         (((volatile __near __bitf_T *)0xFB)->no7)
#define PER2           (*(volatile __near unsigned char  *)0xFC)
#define PER2_bit       (*(volatile __near __bitf_T *)0xFC)
#define TKB0EN         (((volatile __near __bitf_T *)0xFC)->no0)
#define DOCEN          (((volatile __near __bitf_T *)0xFC)->no5)
#define TMKAEN         (((volatile __near __bitf_T *)0xFC)->no7)
#define PRR2           (*(volatile __near unsigned char  *)0xFD)
#define PRR2_bit       (*(volatile __near __bitf_T *)0xFD)
#define TKB0RES        (((volatile __near __bitf_T *)0xFD)->no0)
#define DOCRES         (((volatile __near __bitf_T *)0xFD)->no5)
#define TMKARES        (((volatile __near __bitf_T *)0xFD)->no7)
#define BCDADJ         (*(volatile __near unsigned char  *)0xFE)
#define SSR00          (*(volatile __near unsigned short *)0x100)
#define SSR00L         (*(volatile __near unsigned char  *)0x100)
#define SSR01          (*(volatile __near unsigned short *)0x102)
#define SSR01L         (*(volatile __near unsigned char  *)0x102)
#define SSR02          (*(volatile __near unsigned short *)0x104)
#define SSR02L         (*(volatile __near unsigned char  *)0x104)
#define SSR03          (*(volatile __near unsigned short *)0x106)
#define SSR03L         (*(volatile __near unsigned char  *)0x106)
#define SIR00          (*(volatile __near unsigned short *)0x108)
#define SIR00L         (*(volatile __near unsigned char  *)0x108)
#define SIR01          (*(volatile __near unsigned short *)0x10A)
#define SIR01L         (*(volatile __near unsigned char  *)0x10A)
#define SIR02          (*(volatile __near unsigned short *)0x10C)
#define SIR02L         (*(volatile __near unsigned char  *)0x10C)
#define SIR03          (*(volatile __near unsigned short *)0x10E)
#define SIR03L         (*(volatile __near unsigned char  *)0x10E)
#define SMR00          (*(volatile __near unsigned short *)0x110)
#define SMR01          (*(volatile __near unsigned short *)0x112)
#define SMR02          (*(volatile __near unsigned short *)0x114)
#define SMR03          (*(volatile __near unsigned short *)0x116)
#define SCR00          (*(volatile __near unsigned short *)0x118)
#define SCR01          (*(volatile __near unsigned short *)0x11A)
#define SCR02          (*(volatile __near unsigned short *)0x11C)
#define SCR03          (*(volatile __near unsigned short *)0x11E)
#define SE0            (*(volatile __near unsigned short *)0x120)
#define SE0L           (*(volatile __near unsigned char  *)0x120)
#define SE0L_bit       (*(volatile __near __bitf_T *)0x120)
#define SS0            (*(volatile __near unsigned short *)0x122)
#define SS0L           (*(volatile __near unsigned char  *)0x122)
#define SS0L_bit       (*(volatile __near __bitf_T *)0x122)
#define ST0            (*(volatile __near unsigned short *)0x124)
#define ST0L           (*(volatile __near unsigned char  *)0x124)
#define ST0L_bit       (*(volatile __near __bitf_T *)0x124)
#define SPS0           (*(volatile __near unsigned short *)0x126)
#define SPS0L          (*(volatile __near unsigned char  *)0x126)
#define SO0            (*(volatile __near unsigned short *)0x128)
#define SOE0           (*(volatile __near unsigned short *)0x12A)
#define SOE0L          (*(volatile __near unsigned char  *)0x12A)
#define SOE0L_bit      (*(volatile __near __bitf_T *)0x12A)
#define SOL0           (*(volatile __near unsigned short *)0x134)
#define SOL0L          (*(volatile __near unsigned char  *)0x134)
#define SSC0           (*(volatile __near unsigned short *)0x138)
#define SSC0L          (*(volatile __near unsigned char  *)0x138)
#define TCR00          (*(volatile __near unsigned short *)0x180)
#define TCR01          (*(volatile __near unsigned short *)0x182)
#define TCR02          (*(volatile __near unsigned short *)0x184)
#define TCR03          (*(volatile __near unsigned short *)0x186)
#define TMR00          (*(volatile __near unsigned short *)0x190)
#define TMR01          (*(volatile __near unsigned short *)0x192)
#define TMR02          (*(volatile __near unsigned short *)0x194)
#define TMR03          (*(volatile __near unsigned short *)0x196)
#define TSR00          (*(volatile __near unsigned short *)0x1A0)
#define TSR00L         (*(volatile __near unsigned char  *)0x1A0)
#define TSR01          (*(volatile __near unsigned short *)0x1A2)
#define TSR01L         (*(volatile __near unsigned char  *)0x1A2)
#define TSR02          (*(volatile __near unsigned short *)0x1A4)
#define TSR02L         (*(volatile __near unsigned char  *)0x1A4)
#define TSR03          (*(volatile __near unsigned short *)0x1A6)
#define TSR03L         (*(volatile __near unsigned char  *)0x1A6)
#define TE0            (*(volatile __near unsigned short *)0x1B0)
#define TE0L           (*(volatile __near unsigned char  *)0x1B0)
#define TE0L_bit       (*(volatile __near __bitf_T *)0x1B0)
#define TS0            (*(volatile __near unsigned short *)0x1B2)
#define TS0L           (*(volatile __near unsigned char  *)0x1B2)
#define TS0L_bit       (*(volatile __near __bitf_T *)0x1B2)
#define TT0            (*(volatile __near unsigned short *)0x1B4)
#define TT0L           (*(volatile __near unsigned char  *)0x1B4)
#define TT0L_bit       (*(volatile __near __bitf_T *)0x1B4)
#define TPS0           (*(volatile __near unsigned short *)0x1B6)
#define TO0            (*(volatile __near unsigned short *)0x1B8)
#define TO0L           (*(volatile __near unsigned char  *)0x1B8)
#define TOE0           (*(volatile __near unsigned short *)0x1BA)
#define TOE0L          (*(volatile __near unsigned char  *)0x1BA)
#define TOE0L_bit      (*(volatile __near __bitf_T *)0x1BA)
#define TOL0           (*(volatile __near unsigned short *)0x1BC)
#define TOL0L          (*(volatile __near unsigned char  *)0x1BC)
#define TOM0           (*(volatile __near unsigned short *)0x1BE)
#define TOM0L          (*(volatile __near unsigned char  *)0x1BE)
#define IICCTL00       (*(volatile __near unsigned char  *)0x230)
#define IICCTL00_bit   (*(volatile __near __bitf_T *)0x230)
#define SPT0           (((volatile __near __bitf_T *)0x230)->no0)
#define STT0           (((volatile __near __bitf_T *)0x230)->no1)
#define ACKE0          (((volatile __near __bitf_T *)0x230)->no2)
#define WTIM0          (((volatile __near __bitf_T *)0x230)->no3)
#define SPIE0          (((volatile __near __bitf_T *)0x230)->no4)
#define WREL0          (((volatile __near __bitf_T *)0x230)->no5)
#define LREL0          (((volatile __near __bitf_T *)0x230)->no6)
#define IICE0          (((volatile __near __bitf_T *)0x230)->no7)
#define IICCTL01       (*(volatile __near unsigned char  *)0x231)
#define IICCTL01_bit   (*(volatile __near __bitf_T *)0x231)
#define PRS0           (((volatile __near __bitf_T *)0x231)->no0)
#define DFC0           (((volatile __near __bitf_T *)0x231)->no2)
#define SMC0           (((volatile __near __bitf_T *)0x231)->no3)
#define DAD0           (((volatile __near __bitf_T *)0x231)->no4)
#define CLD0           (((volatile __near __bitf_T *)0x231)->no5)
#define WUP0           (((volatile __near __bitf_T *)0x231)->no7)
#define IICWL0         (*(volatile __near unsigned char  *)0x232)
#define IICWH0         (*(volatile __near unsigned char  *)0x233)
#define SVA0           (*(volatile __near unsigned char  *)0x234)
#define IICCTL10       (*(volatile __near unsigned char  *)0x238)
#define IICCTL10_bit   (*(volatile __near __bitf_T *)0x238)
#define SPT1           (((volatile __near __bitf_T *)0x238)->no0)
#define STT1           (((volatile __near __bitf_T *)0x238)->no1)
#define ACKE1          (((volatile __near __bitf_T *)0x238)->no2)
#define WTIM1          (((volatile __near __bitf_T *)0x238)->no3)
#define SPIE1          (((volatile __near __bitf_T *)0x238)->no4)
#define WREL1          (((volatile __near __bitf_T *)0x238)->no5)
#define LREL1          (((volatile __near __bitf_T *)0x238)->no6)
#define IICE1          (((volatile __near __bitf_T *)0x238)->no7)
#define IICCTL11       (*(volatile __near unsigned char  *)0x239)
#define IICCTL11_bit   (*(volatile __near __bitf_T *)0x239)
#define PRS1           (((volatile __near __bitf_T *)0x239)->no0)
#define DFC1           (((volatile __near __bitf_T *)0x239)->no2)
#define SMC1           (((volatile __near __bitf_T *)0x239)->no3)
#define DAD1           (((volatile __near __bitf_T *)0x239)->no4)
#define CLD1           (((volatile __near __bitf_T *)0x239)->no5)
#define WUP1           (((volatile __near __bitf_T *)0x239)->no7)
#define IICWL1         (*(volatile __near unsigned char  *)0x23A)
#define IICWH1         (*(volatile __near unsigned char  *)0x23B)
#define SVA1           (*(volatile __near unsigned char  *)0x23C)
#define ELSELR00       (*(volatile __near unsigned char  *)0x240)
#define ELSELR01       (*(volatile __near unsigned char  *)0x241)
#define ELSELR02       (*(volatile __near unsigned char  *)0x242)
#define ELSELR03       (*(volatile __near unsigned char  *)0x243)
#define ELSELR04       (*(volatile __near unsigned char  *)0x244)
#define ELSELR05       (*(volatile __near unsigned char  *)0x245)
#define ELSELR07       (*(volatile __near unsigned char  *)0x247)
#define ELSELR08       (*(volatile __near unsigned char  *)0x248)
#define ELSELR09       (*(volatile __near unsigned char  *)0x249)
#define ELSELR10       (*(volatile __near unsigned char  *)0x24A)
#define ELSELR11       (*(volatile __near unsigned char  *)0x24B)
#define ELSELR12       (*(volatile __near unsigned char  *)0x24C)
#define ELSELR13       (*(volatile __near unsigned char  *)0x24D)
#define ELSELR14       (*(volatile __near unsigned char  *)0x24E)
#define ELSELR15       (*(volatile __near unsigned char  *)0x24F)
#define ELSELR16       (*(volatile __near unsigned char  *)0x250)
#define ELSELR17       (*(volatile __near unsigned char  *)0x251)
#define TPS2           (*(volatile __near unsigned char  *)0x2D4)
#define TPS3           (*(volatile __near unsigned char  *)0x2D5)
#define DTCBAR         (*(volatile __near unsigned char  *)0x2E0)
#define DTCEN0         (*(volatile __near unsigned char  *)0x2E8)
#define DTCEN0_bit     (*(volatile __near __bitf_T *)0x2E8)
#define DTCEN1         (*(volatile __near unsigned char  *)0x2E9)
#define DTCEN1_bit     (*(volatile __near __bitf_T *)0x2E9)
#define DTCEN2         (*(volatile __near unsigned char  *)0x2EA)
#define DTCEN2_bit     (*(volatile __near __bitf_T *)0x2EA)
#define CRC0CTL        (*(volatile __near unsigned char  *)0x2F0)
#define CRC0CTL_bit    (*(volatile __near __bitf_T *)0x2F0)
#define CRC0EN         (((volatile __near __bitf_T *)0x2F0)->no7)
#define PGCRCL         (*(volatile __near unsigned short *)0x2F2)
#define CRCD           (*(volatile __near unsigned short *)0x2FA)
#define COMPMDR        (*(volatile __near unsigned char  *)0x340)
#define COMPMDR_bit    (*(volatile __near __bitf_T *)0x340)
#define C0ENB          (((volatile __near __bitf_T *)0x340)->no0)
#define C1ENB          (((volatile __near __bitf_T *)0x340)->no4)
#define COMPFIR        (*(volatile __near unsigned char  *)0x341)
#define COMPFIR_bit    (*(volatile __near __bitf_T *)0x341)
#define COMPOCR        (*(volatile __near unsigned char  *)0x342)
#define COMPOCR_bit    (*(volatile __near __bitf_T *)0x342)
#define C0IE           (((volatile __near __bitf_T *)0x342)->no0)
#define C0OE           (((volatile __near __bitf_T *)0x342)->no1)
#define C0OP           (((volatile __near __bitf_T *)0x342)->no2)
#define C1IE           (((volatile __near __bitf_T *)0x342)->no4)
#define C1OE           (((volatile __near __bitf_T *)0x342)->no5)
#define C1OP           (((volatile __near __bitf_T *)0x342)->no6)
#define SPDMD          (((volatile __near __bitf_T *)0x342)->no7)
#define COMPISEL       (*(volatile __near unsigned char  *)0x348)
#define COMPISEL_bit   (*(volatile __near __bitf_T *)0x348)
#define PGACTL         (*(volatile __near unsigned char  *)0x349)
#define PGACTL_bit     (*(volatile __near __bitf_T *)0x349)
#define PGAEN          (((volatile __near __bitf_T *)0x349)->no7)
#define TRTCMP0        (*(volatile __near unsigned short *)0x350)
#define TRTCMP00       (*(volatile __near unsigned char  *)0x350)
#define TRTCMP01       (*(volatile __near unsigned char  *)0x351)
#define TRTCR0         (*(volatile __near unsigned char  *)0x352)
#define TRTCR0_bit     (*(volatile __near __bitf_T *)0x352)
#define TSTART00       (((volatile __near __bitf_T *)0x352)->no0)
#define TSTART01       (((volatile __near __bitf_T *)0x352)->no2)
#define TRTMD0         (*(volatile __near unsigned char  *)0x353)
#define TKBCR00        (*(volatile __near unsigned short *)0x400)
#define TKBCR01        (*(volatile __near unsigned short *)0x402)
#define TKBCR02        (*(volatile __near unsigned short *)0x404)
#define TKBCR03        (*(volatile __near unsigned short *)0x406)
#define TKBTGCR0       (*(volatile __near unsigned short *)0x408)
#define TKBSIR00       (*(volatile __near unsigned short *)0x40A)
#define TKBSIR01       (*(volatile __near unsigned short *)0x40C)
#define TKBDNR00       (*(volatile __near unsigned char  *)0x40E)
#define TKBSSR00       (*(volatile __near unsigned char  *)0x40F)
#define TKBDNR01       (*(volatile __near unsigned char  *)0x410)
#define TKBSSR01       (*(volatile __near unsigned char  *)0x411)
#define TKBTRG0        (*(volatile __near unsigned char  *)0x412)
#define TKBTRG0_bit    (*(volatile __near __bitf_T *)0x412)
#define TKBRDT0        (((volatile __near __bitf_T *)0x412)->no0)
#define TKBFLG0        (*(volatile __near unsigned char  *)0x413)
#define TKBFLG0_bit    (*(volatile __near __bitf_T *)0x413)
#define TKBRSF0        (((volatile __near __bitf_T *)0x413)->no0)
#define TKBMFF0        (((volatile __near __bitf_T *)0x413)->no1)
#define TKBIEF0        (((volatile __near __bitf_T *)0x413)->no2)
#define TKBIRF0        (((volatile __near __bitf_T *)0x413)->no3)
#define TKBSEF00       (((volatile __near __bitf_T *)0x413)->no4)
#define TKBSEF01       (((volatile __near __bitf_T *)0x413)->no5)
#define TKBSSF00       (((volatile __near __bitf_T *)0x413)->no6)
#define TKBSSF01       (((volatile __near __bitf_T *)0x413)->no7)
#define TKBCRLD00      (*(volatile __near unsigned short *)0x414)
#define TKBCRLD01      (*(volatile __near unsigned short *)0x416)
#define TKBCNT0        (*(volatile __near unsigned short *)0x420)
#define TKBCTL00       (*(volatile __near unsigned short *)0x422)
#define TKBMFR0        (*(volatile __near unsigned short *)0x424)
#define TKBIOC00       (*(volatile __near unsigned char  *)0x426)
#define TKBIOC00_bit   (*(volatile __near __bitf_T *)0x426)
#define TKBTOD00       (((volatile __near __bitf_T *)0x426)->no0)
#define TKBTOD01       (((volatile __near __bitf_T *)0x426)->no1)
#define TKBTOL00       (((volatile __near __bitf_T *)0x426)->no2)
#define TKBTOL01       (((volatile __near __bitf_T *)0x426)->no3)
#define TKBCLR0        (*(volatile __near unsigned char  *)0x427)
#define TKBCLR0_bit    (*(volatile __near __bitf_T *)0x427)
#define TKBCLMF0       (((volatile __near __bitf_T *)0x427)->no1)
#define TKBCLIE0       (((volatile __near __bitf_T *)0x427)->no2)
#define TKBCLIR0       (((volatile __near __bitf_T *)0x427)->no3)
#define TKBCLSE00      (((volatile __near __bitf_T *)0x427)->no4)
#define TKBCLSE01      (((volatile __near __bitf_T *)0x427)->no5)
#define TKBIOC01       (*(volatile __near unsigned char  *)0x428)
#define TKBIOC01_bit   (*(volatile __near __bitf_T *)0x428)
#define TKBTOE00       (((volatile __near __bitf_T *)0x428)->no0)
#define TKBTOE01       (((volatile __near __bitf_T *)0x428)->no1)
#define TKBCTL01       (*(volatile __near unsigned char  *)0x429)
#define TKBCTL01_bit   (*(volatile __near __bitf_T *)0x429)
#define TKBCE0         (((volatile __near __bitf_T *)0x429)->no7)
#define TKBPACTL00     (*(volatile __near unsigned short *)0x430)
#define TKBPACTL01     (*(volatile __near unsigned short *)0x432)
#define TKBPAHFS0      (*(volatile __near unsigned char  *)0x434)
#define TKBPAHFS0_bit  (*(volatile __near __bitf_T *)0x434)
#define TKBPAHTS00     (((volatile __near __bitf_T *)0x434)->no0)
#define TKBPAHTS01     (((volatile __near __bitf_T *)0x434)->no1)
#define TKBPAHFT0      (*(volatile __near unsigned char  *)0x435)
#define TKBPAHFT0_bit  (*(volatile __near __bitf_T *)0x435)
#define TKBPAHTT00     (((volatile __near __bitf_T *)0x435)->no0)
#define TKBPAHTT01     (((volatile __near __bitf_T *)0x435)->no1)
#define TKBPAFLG0      (*(volatile __near unsigned char  *)0x436)
#define TKBPAFLG0_bit  (*(volatile __near __bitf_T *)0x436)
#define TKBPAHIF00     (((volatile __near __bitf_T *)0x436)->no0)
#define TKBPAFIF00     (((volatile __near __bitf_T *)0x436)->no1)
#define TKBPAHIF01     (((volatile __near __bitf_T *)0x436)->no2)
#define TKBPAFIF01     (((volatile __near __bitf_T *)0x436)->no3)
#define TKBPAHSF00     (((volatile __near __bitf_T *)0x436)->no4)
#define TKBPAFSF00     (((volatile __near __bitf_T *)0x436)->no5)
#define TKBPAHSF01     (((volatile __near __bitf_T *)0x436)->no6)
#define TKBPAFSF01     (((volatile __near __bitf_T *)0x436)->no7)
#define TKBPACTL02     (*(volatile __near unsigned char  *)0x437)
#define TKBPACTL02_bit (*(volatile __near __bitf_T *)0x437)
#define TKBPACE00      (((volatile __near __bitf_T *)0x437)->no0)
#define TKBPACE01      (((volatile __near __bitf_T *)0x437)->no1)
#define PFSEL0         (*(volatile __near unsigned char  *)0x440)
#define PFSEL0_bit     (*(volatile __near __bitf_T *)0x440)
#define TMRSTEN0       (((volatile __near __bitf_T *)0x440)->no0)
#define TMRSTEN1       (((volatile __near __bitf_T *)0x440)->no1)
#define PNFEN0         (((volatile __near __bitf_T *)0x440)->no2)
#define PNFEN1         (((volatile __near __bitf_T *)0x440)->no3)
#define INTPINV0       (((volatile __near __bitf_T *)0x440)->no4)
#define INTPINV1       (((volatile __near __bitf_T *)0x440)->no5)
#define INTPEG         (*(volatile __near unsigned char  *)0x441)
#define INTPEG_bit     (*(volatile __near __bitf_T *)0x441)
#define INTFE          (*(volatile __near unsigned char  *)0x448)
#define INTFE_bit      (*(volatile __near __bitf_T *)0x448)
#define INTADFE        (((volatile __near __bitf_T *)0x448)->no0)
#define INTITFE        (((volatile __near __bitf_T *)0x448)->no1)
#define INTIT00FE      (((volatile __near __bitf_T *)0x448)->no2)
#define INTIT01FE      (((volatile __near __bitf_T *)0x448)->no3)
#define INTTMKB0FE     (((volatile __near __bitf_T *)0x448)->no4)
#define INTDOCFE       (((volatile __near __bitf_T *)0x448)->no5)
#define INTCMP0FE      (((volatile __near __bitf_T *)0x448)->no6)
#define INTCMP1FE      (((volatile __near __bitf_T *)0x448)->no7)
#define INTFOCTL0      (*(volatile __near unsigned char  *)0x449)
#define INTFOCTL0_bit  (*(volatile __near __bitf_T *)0x449)
#define INTFOCTL1      (*(volatile __near unsigned char  *)0x44A)
#define INTFOCTL1_bit  (*(volatile __near __bitf_T *)0x44A)
#define INTFCLR        (((volatile __near __bitf_T *)0x44A)->no0)
#define TRT0           (*(volatile __near unsigned short *)0x500)
#define TRT00          (*(volatile __near unsigned char  *)0x500)
#define TRT01          (*(volatile __near unsigned char  *)0x501)
#define DOCR           (*(volatile __near unsigned char  *)0x511)
#define DOCR_bit       (*(volatile __near __bitf_T *)0x511)
#define OMS0           (((volatile __near __bitf_T *)0x511)->no0)
#define OMS1           (((volatile __near __bitf_T *)0x511)->no1)
#define DCSEL          (((volatile __near __bitf_T *)0x511)->no2)
#define DOPCIE         (((volatile __near __bitf_T *)0x511)->no4)
#define DOPCF          (((volatile __near __bitf_T *)0x511)->no5)
#define DOPCFCL        (((volatile __near __bitf_T *)0x511)->no6)
#define DODIR          (*(volatile __near unsigned short *)0x512)
#define DODSR          (*(volatile __near unsigned short *)0x514)
#define P0             (*(volatile __near unsigned char  *)0xFF00)
#define P0_bit         (*(volatile __near __bitf_T *)0xFF00)
#define P2             (*(volatile __near unsigned char  *)0xFF02)
#define P2_bit         (*(volatile __near __bitf_T *)0xFF02)
#define P3             (*(volatile __near unsigned char  *)0xFF03)
#define P3_bit         (*(volatile __near __bitf_T *)0xFF03)
#define P4             (*(volatile __near unsigned char  *)0xFF04)
#define P4_bit         (*(volatile __near __bitf_T *)0xFF04)
#define P5             (*(volatile __near unsigned char  *)0xFF05)
#define P5_bit         (*(volatile __near __bitf_T *)0xFF05)
#define P12            (*(volatile __near unsigned char  *)0xFF0C)
#define P12_bit        (*(volatile __near __bitf_T *)0xFF0C)
#define P13            (*(volatile __near unsigned char  *)0xFF0D)
#define P13_bit        (*(volatile __near __bitf_T *)0xFF0D)
#define SDR00          (*(volatile __near unsigned short *)0xFF10)
#define SIO00          (*(volatile __near unsigned char  *)0xFF10)
#define TXD0           (*(volatile __near unsigned char  *)0xFF10)
#define SDR01          (*(volatile __near unsigned short *)0xFF12)
#define RXD0           (*(volatile __near unsigned char  *)0xFF12)
#define TDR00          (*(volatile __near unsigned short *)0xFF18)
#define TDR01          (*(volatile __near unsigned short *)0xFF1A)
#define TDR01L         (*(volatile __near unsigned char  *)0xFF1A)
#define TDR01H         (*(volatile __near unsigned char  *)0xFF1B)
#define ADCR           (*(volatile __near unsigned short *)0xFF1E)
#define ADCRH          (*(volatile __near unsigned char  *)0xFF1F)
#define PM0            (*(volatile __near unsigned char  *)0xFF20)
#define PM0_bit        (*(volatile __near __bitf_T *)0xFF20)
#define PM2            (*(volatile __near unsigned char  *)0xFF22)
#define PM2_bit        (*(volatile __near __bitf_T *)0xFF22)
#define PM3            (*(volatile __near unsigned char  *)0xFF23)
#define PM3_bit        (*(volatile __near __bitf_T *)0xFF23)
#define PM4            (*(volatile __near unsigned char  *)0xFF24)
#define PM4_bit        (*(volatile __near __bitf_T *)0xFF24)
#define PM5            (*(volatile __near unsigned char  *)0xFF25)
#define PM5_bit        (*(volatile __near __bitf_T *)0xFF25)
#define ADM0           (*(volatile __near unsigned char  *)0xFF30)
#define ADM0_bit       (*(volatile __near __bitf_T *)0xFF30)
#define ADCE           (((volatile __near __bitf_T *)0xFF30)->no0)
#define ADCS           (((volatile __near __bitf_T *)0xFF30)->no7)
#define ADS            (*(volatile __near unsigned char  *)0xFF31)
#define ADS_bit        (*(volatile __near __bitf_T *)0xFF31)
#define ADM1           (*(volatile __near unsigned char  *)0xFF32)
#define ADM1_bit       (*(volatile __near __bitf_T *)0xFF32)
#define KRCTL          (*(volatile __near unsigned char  *)0xFF34)
#define KRCTL_bit      (*(volatile __near __bitf_T *)0xFF34)
#define KREG           (((volatile __near __bitf_T *)0xFF34)->no0)
#define KRMD           (((volatile __near __bitf_T *)0xFF34)->no7)
#define KRF            (*(volatile __near unsigned char  *)0xFF35)
#define KRM0           (*(volatile __near unsigned char  *)0xFF37)
#define KRM0_bit       (*(volatile __near __bitf_T *)0xFF37)
#define EGP0           (*(volatile __near unsigned char  *)0xFF38)
#define EGP0_bit       (*(volatile __near __bitf_T *)0xFF38)
#define EGN0           (*(volatile __near unsigned char  *)0xFF39)
#define EGN0_bit       (*(volatile __near __bitf_T *)0xFF39)
#define EGP1           (*(volatile __near unsigned char  *)0xFF3A)
#define EGP1_bit       (*(volatile __near __bitf_T *)0xFF3A)
#define EGN1           (*(volatile __near unsigned char  *)0xFF3B)
#define EGN1_bit       (*(volatile __near __bitf_T *)0xFF3B)
#define DACS0          (*(volatile __near unsigned char  *)0xFF3C)
#define DACS1          (*(volatile __near unsigned char  *)0xFF3D)
#define DAM            (*(volatile __near unsigned char  *)0xFF3E)
#define DAM_bit        (*(volatile __near __bitf_T *)0xFF3E)
#define DACE0          (((volatile __near __bitf_T *)0xFF3E)->no4)
#define DACE1          (((volatile __near __bitf_T *)0xFF3E)->no5)
#define SDR02          (*(volatile __near unsigned short *)0xFF44)
#define SIO10          (*(volatile __near unsigned char  *)0xFF44)
#define TXD1           (*(volatile __near unsigned char  *)0xFF44)
#define SDR03          (*(volatile __near unsigned short *)0xFF46)
#define RXD1           (*(volatile __near unsigned char  *)0xFF46)
#define SIO11          (*(volatile __near unsigned char  *)0xFF46)
#define IICA0          (*(volatile __near unsigned char  *)0xFF50)
#define IICS0          (*(volatile __near unsigned char  *)0xFF51)
#define IICS0_bit      (*(volatile __near __bitf_T *)0xFF51)
#define SPD0           (((volatile __near __bitf_T *)0xFF51)->no0)
#define STD0           (((volatile __near __bitf_T *)0xFF51)->no1)
#define ACKD0          (((volatile __near __bitf_T *)0xFF51)->no2)
#define TRC0           (((volatile __near __bitf_T *)0xFF51)->no3)
#define COI0           (((volatile __near __bitf_T *)0xFF51)->no4)
#define EXC0           (((volatile __near __bitf_T *)0xFF51)->no5)
#define ALD0           (((volatile __near __bitf_T *)0xFF51)->no6)
#define MSTS0          (((volatile __near __bitf_T *)0xFF51)->no7)
#define IICF0          (*(volatile __near unsigned char  *)0xFF52)
#define IICF0_bit      (*(volatile __near __bitf_T *)0xFF52)
#define IICRSV0        (((volatile __near __bitf_T *)0xFF52)->no0)
#define STCEN0         (((volatile __near __bitf_T *)0xFF52)->no1)
#define IICBSY0        (((volatile __near __bitf_T *)0xFF52)->no6)
#define STCF0          (((volatile __near __bitf_T *)0xFF52)->no7)
#define IICA1          (*(volatile __near unsigned char  *)0xFF54)
#define IICS1          (*(volatile __near unsigned char  *)0xFF55)
#define IICS1_bit      (*(volatile __near __bitf_T *)0xFF55)
#define SPD1           (((volatile __near __bitf_T *)0xFF55)->no0)
#define STD1           (((volatile __near __bitf_T *)0xFF55)->no1)
#define ACKD1          (((volatile __near __bitf_T *)0xFF55)->no2)
#define TRC1           (((volatile __near __bitf_T *)0xFF55)->no3)
#define COI1           (((volatile __near __bitf_T *)0xFF55)->no4)
#define EXC1           (((volatile __near __bitf_T *)0xFF55)->no5)
#define ALD1           (((volatile __near __bitf_T *)0xFF55)->no6)
#define MSTS1          (((volatile __near __bitf_T *)0xFF55)->no7)
#define IICF1          (*(volatile __near unsigned char  *)0xFF56)
#define IICF1_bit      (*(volatile __near __bitf_T *)0xFF56)
#define IICRSV1        (((volatile __near __bitf_T *)0xFF56)->no0)
#define STCEN1         (((volatile __near __bitf_T *)0xFF56)->no1)
#define IICBSY1        (((volatile __near __bitf_T *)0xFF56)->no6)
#define STCF1          (((volatile __near __bitf_T *)0xFF56)->no7)
#define TDR02          (*(volatile __near unsigned short *)0xFF64)
#define TDR03          (*(volatile __near unsigned short *)0xFF66)
#define TDR03L         (*(volatile __near unsigned char  *)0xFF66)
#define TDR03H         (*(volatile __near unsigned char  *)0xFF67)
#define ITMC           (*(volatile __near unsigned short *)0xFF90)
#define CMC            (*(volatile __near unsigned char  *)0xFFA0)
#define CSC            (*(volatile __near unsigned char  *)0xFFA1)
#define CSC_bit        (*(volatile __near __bitf_T *)0xFFA1)
#define HIOSTOP        (((volatile __near __bitf_T *)0xFFA1)->no0)
#define MIOEN          (((volatile __near __bitf_T *)0xFFA1)->no1)
#define MSTOP          (((volatile __near __bitf_T *)0xFFA1)->no7)
#define OSTC           (*(volatile __near unsigned char  *)0xFFA2)
#define OSTC_bit       (*(volatile __near __bitf_T *)0xFFA2)
#define OSTS           (*(volatile __near unsigned char  *)0xFFA3)
#define CKC            (*(volatile __near unsigned char  *)0xFFA4)
#define CKC_bit        (*(volatile __near __bitf_T *)0xFFA4)
#define MCM1           (((volatile __near __bitf_T *)0xFFA4)->no0)
#define MCS1           (((volatile __near __bitf_T *)0xFFA4)->no1)
#define MCM0           (((volatile __near __bitf_T *)0xFFA4)->no4)
#define MCS            (((volatile __near __bitf_T *)0xFFA4)->no5)
#define CSS            (((volatile __near __bitf_T *)0xFFA4)->no6)
#define CLS            (((volatile __near __bitf_T *)0xFFA4)->no7)
#define CKS0           (*(volatile __near unsigned char  *)0xFFA5)
#define CKS0_bit       (*(volatile __near __bitf_T *)0xFFA5)
#define PCLOE0         (((volatile __near __bitf_T *)0xFFA5)->no7)
#define CKS1           (*(volatile __near unsigned char  *)0xFFA6)
#define CKS1_bit       (*(volatile __near __bitf_T *)0xFFA6)
#define PCLOE1         (((volatile __near __bitf_T *)0xFFA6)->no7)
#define CKSEL          (*(volatile __near unsigned char  *)0xFFA7)
#define CKSEL_bit      (*(volatile __near __bitf_T *)0xFFA7)
#define SELLOSC        (((volatile __near __bitf_T *)0xFFA7)->no0)
#define RESF           (*(volatile __near unsigned char  *)0xFFA8)
#define LVIM           (*(volatile __near unsigned char  *)0xFFA9)
#define LVIM_bit       (*(volatile __near __bitf_T *)0xFFA9)
#define LVIF           (((volatile __near __bitf_T *)0xFFA9)->no0)
#define LVIOMSK        (((volatile __near __bitf_T *)0xFFA9)->no1)
#define LVISEN         (((volatile __near __bitf_T *)0xFFA9)->no7)
#define LVIS           (*(volatile __near unsigned char  *)0xFFAA)
#define LVIS_bit       (*(volatile __near __bitf_T *)0xFFAA)
#define LVILV          (((volatile __near __bitf_T *)0xFFAA)->no0)
#define LVIMD          (((volatile __near __bitf_T *)0xFFAA)->no7)
#define WDTE           (*(volatile __near unsigned char  *)0xFFAB)
#define CRCIN          (*(volatile __near unsigned char  *)0xFFAC)
#define IF2            (*(volatile __near unsigned short *)0xFFD0)
#define IF2L           (*(volatile __near unsigned char  *)0xFFD0)
#define IF2L_bit       (*(volatile __near __bitf_T *)0xFFD0)
#define IF2H           (*(volatile __near unsigned char  *)0xFFD1)
#define IF2H_bit       (*(volatile __near __bitf_T *)0xFFD1)
#define CMPIF0         (((volatile __near __bitf_T *)0xFFD0)->no0)
#define CMPIF1         (((volatile __near __bitf_T *)0xFFD0)->no1)
#define DOCIF          (((volatile __near __bitf_T *)0xFFD0)->no2)
#define ITIF00         (((volatile __near __bitf_T *)0xFFD0)->no3)
#define ITIF01         (((volatile __near __bitf_T *)0xFFD0)->no4)
#define TMKBIF0        (((volatile __near __bitf_T *)0xFFD0)->no5)
#define IICAIF1        (((volatile __near __bitf_T *)0xFFD0)->no6)
#define FLIF           (((volatile __near __bitf_T *)0xFFD0)->no7)
#define FOIF           (((volatile __near __bitf_T *)0xFFD1)->no0)
#define MK2            (*(volatile __near unsigned short *)0xFFD4)
#define MK2L           (*(volatile __near unsigned char  *)0xFFD4)
#define MK2L_bit       (*(volatile __near __bitf_T *)0xFFD4)
#define MK2H           (*(volatile __near unsigned char  *)0xFFD5)
#define MK2H_bit       (*(volatile __near __bitf_T *)0xFFD5)
#define CMPMK0         (((volatile __near __bitf_T *)0xFFD4)->no0)
#define CMPMK1         (((volatile __near __bitf_T *)0xFFD4)->no1)
#define DOCMK          (((volatile __near __bitf_T *)0xFFD4)->no2)
#define ITMK00         (((volatile __near __bitf_T *)0xFFD4)->no3)
#define ITMK01         (((volatile __near __bitf_T *)0xFFD4)->no4)
#define TMKBMK0        (((volatile __near __bitf_T *)0xFFD4)->no5)
#define IICAMK1        (((volatile __near __bitf_T *)0xFFD4)->no6)
#define FLMK           (((volatile __near __bitf_T *)0xFFD4)->no7)
#define FOMK           (((volatile __near __bitf_T *)0xFFD5)->no0)
#define PR02           (*(volatile __near unsigned short *)0xFFD8)
#define PR02L          (*(volatile __near unsigned char  *)0xFFD8)
#define PR02L_bit      (*(volatile __near __bitf_T *)0xFFD8)
#define PR02H          (*(volatile __near unsigned char  *)0xFFD9)
#define PR02H_bit      (*(volatile __near __bitf_T *)0xFFD9)
#define CMPPR00        (((volatile __near __bitf_T *)0xFFD8)->no0)
#define CMPPR01        (((volatile __near __bitf_T *)0xFFD8)->no1)
#define DOCPR0         (((volatile __near __bitf_T *)0xFFD8)->no2)
#define ITPR000        (((volatile __near __bitf_T *)0xFFD8)->no3)
#define ITPR001        (((volatile __near __bitf_T *)0xFFD8)->no4)
#define TMKBPR00       (((volatile __near __bitf_T *)0xFFD8)->no5)
#define IICAPR01       (((volatile __near __bitf_T *)0xFFD8)->no6)
#define FLPR0          (((volatile __near __bitf_T *)0xFFD8)->no7)
#define FOPR0          (((volatile __near __bitf_T *)0xFFD9)->no0)
#define PR12           (*(volatile __near unsigned short *)0xFFDC)
#define PR12L          (*(volatile __near unsigned char  *)0xFFDC)
#define PR12L_bit      (*(volatile __near __bitf_T *)0xFFDC)
#define PR12H          (*(volatile __near unsigned char  *)0xFFDD)
#define PR12H_bit      (*(volatile __near __bitf_T *)0xFFDD)
#define CMPPR10        (((volatile __near __bitf_T *)0xFFDC)->no0)
#define CMPPR11        (((volatile __near __bitf_T *)0xFFDC)->no1)
#define DOCPR1         (((volatile __near __bitf_T *)0xFFDC)->no2)
#define ITPR100        (((volatile __near __bitf_T *)0xFFDC)->no3)
#define ITPR101        (((volatile __near __bitf_T *)0xFFDC)->no4)
#define TMKBPR10       (((volatile __near __bitf_T *)0xFFDC)->no5)
#define IICAPR11       (((volatile __near __bitf_T *)0xFFDC)->no6)
#define FLPR1          (((volatile __near __bitf_T *)0xFFDC)->no7)
#define FOPR1          (((volatile __near __bitf_T *)0xFFDD)->no0)
#define IF0            (*(volatile __near unsigned short *)0xFFE0)
#define IF0L           (*(volatile __near unsigned char  *)0xFFE0)
#define IF0L_bit       (*(volatile __near __bitf_T *)0xFFE0)
#define IF0H           (*(volatile __near unsigned char  *)0xFFE1)
#define IF0H_bit       (*(volatile __near __bitf_T *)0xFFE1)
#define WDTIIF         (((volatile __near __bitf_T *)0xFFE0)->no0)
#define LVIIF          (((volatile __near __bitf_T *)0xFFE0)->no1)
#define PIF0           (((volatile __near __bitf_T *)0xFFE0)->no2)
#define PIF1           (((volatile __near __bitf_T *)0xFFE0)->no3)
#define PIF2           (((volatile __near __bitf_T *)0xFFE0)->no4)
#define PIF3           (((volatile __near __bitf_T *)0xFFE0)->no5)
#define PIF4           (((volatile __near __bitf_T *)0xFFE0)->no6)
#define PIF5           (((volatile __near __bitf_T *)0xFFE0)->no7)
#define CSIIF00        (((volatile __near __bitf_T *)0xFFE1)->no1)
#define IICIF00        (((volatile __near __bitf_T *)0xFFE1)->no1)
#define STIF0          (((volatile __near __bitf_T *)0xFFE1)->no1)
#define SRIF0          (((volatile __near __bitf_T *)0xFFE1)->no2)
#define SREIF0         (((volatile __near __bitf_T *)0xFFE1)->no5)
#define TMIF00         (((volatile __near __bitf_T *)0xFFE1)->no6)
#define CSIIF10        (((volatile __near __bitf_T *)0xFFE1)->no7)
#define IICIF10        (((volatile __near __bitf_T *)0xFFE1)->no7)
#define STIF1          (((volatile __near __bitf_T *)0xFFE1)->no7)
#define IF1            (*(volatile __near unsigned short *)0xFFE2)
#define IF1L           (*(volatile __near unsigned char  *)0xFFE2)
#define IF1L_bit       (*(volatile __near __bitf_T *)0xFFE2)
#define IF1H           (*(volatile __near unsigned char  *)0xFFE3)
#define IF1H_bit       (*(volatile __near __bitf_T *)0xFFE3)
#define CSIIF11        (((volatile __near __bitf_T *)0xFFE2)->no0)
#define IICIF11        (((volatile __near __bitf_T *)0xFFE2)->no0)
#define SRIF1          (((volatile __near __bitf_T *)0xFFE2)->no0)
#define SREIF1         (((volatile __near __bitf_T *)0xFFE2)->no1)
#define IICAIF0        (((volatile __near __bitf_T *)0xFFE2)->no2)
#define TMIF01H        (((volatile __near __bitf_T *)0xFFE2)->no3)
#define TMIF03H        (((volatile __near __bitf_T *)0xFFE2)->no4)
#define TMIF01         (((volatile __near __bitf_T *)0xFFE2)->no5)
#define TMIF02         (((volatile __near __bitf_T *)0xFFE2)->no6)
#define TMIF03         (((volatile __near __bitf_T *)0xFFE2)->no7)
#define ADIF           (((volatile __near __bitf_T *)0xFFE3)->no0)
#define TMKAIF         (((volatile __near __bitf_T *)0xFFE3)->no1)
#define KRIF           (((volatile __near __bitf_T *)0xFFE3)->no2)
#define PIF9           (((volatile __near __bitf_T *)0xFFE3)->no5)
#define PIF10          (((volatile __near __bitf_T *)0xFFE3)->no6)
#define PIF11          (((volatile __near __bitf_T *)0xFFE3)->no7)
#define MK0            (*(volatile __near unsigned short *)0xFFE4)
#define MK0L           (*(volatile __near unsigned char  *)0xFFE4)
#define MK0L_bit       (*(volatile __near __bitf_T *)0xFFE4)
#define MK0H           (*(volatile __near unsigned char  *)0xFFE5)
#define MK0H_bit       (*(volatile __near __bitf_T *)0xFFE5)
#define WDTIMK         (((volatile __near __bitf_T *)0xFFE4)->no0)
#define LVIMK          (((volatile __near __bitf_T *)0xFFE4)->no1)
#define PMK0           (((volatile __near __bitf_T *)0xFFE4)->no2)
#define PMK1           (((volatile __near __bitf_T *)0xFFE4)->no3)
#define PMK2           (((volatile __near __bitf_T *)0xFFE4)->no4)
#define PMK3           (((volatile __near __bitf_T *)0xFFE4)->no5)
#define PMK4           (((volatile __near __bitf_T *)0xFFE4)->no6)
#define PMK5           (((volatile __near __bitf_T *)0xFFE4)->no7)
#define CSIMK00        (((volatile __near __bitf_T *)0xFFE5)->no1)
#define IICMK00        (((volatile __near __bitf_T *)0xFFE5)->no1)
#define STMK0          (((volatile __near __bitf_T *)0xFFE5)->no1)
#define SRMK0          (((volatile __near __bitf_T *)0xFFE5)->no2)
#define SREMK0         (((volatile __near __bitf_T *)0xFFE5)->no5)
#define TMMK00         (((volatile __near __bitf_T *)0xFFE5)->no6)
#define CSIMK10        (((volatile __near __bitf_T *)0xFFE5)->no7)
#define IICMK10        (((volatile __near __bitf_T *)0xFFE5)->no7)
#define STMK1          (((volatile __near __bitf_T *)0xFFE5)->no7)
#define MK1            (*(volatile __near unsigned short *)0xFFE6)
#define MK1L           (*(volatile __near unsigned char  *)0xFFE6)
#define MK1L_bit       (*(volatile __near __bitf_T *)0xFFE6)
#define MK1H           (*(volatile __near unsigned char  *)0xFFE7)
#define MK1H_bit       (*(volatile __near __bitf_T *)0xFFE7)
#define CSIMK11        (((volatile __near __bitf_T *)0xFFE6)->no0)
#define IICMK11        (((volatile __near __bitf_T *)0xFFE6)->no0)
#define SRMK1          (((volatile __near __bitf_T *)0xFFE6)->no0)
#define SREMK1         (((volatile __near __bitf_T *)0xFFE6)->no1)
#define IICAMK0        (((volatile __near __bitf_T *)0xFFE6)->no2)
#define TMMK01H        (((volatile __near __bitf_T *)0xFFE6)->no3)
#define TMMK03H        (((volatile __near __bitf_T *)0xFFE6)->no4)
#define TMMK01         (((volatile __near __bitf_T *)0xFFE6)->no5)
#define TMMK02         (((volatile __near __bitf_T *)0xFFE6)->no6)
#define TMMK03         (((volatile __near __bitf_T *)0xFFE6)->no7)
#define ADMK           (((volatile __near __bitf_T *)0xFFE7)->no0)
#define TMKAMK         (((volatile __near __bitf_T *)0xFFE7)->no1)
#define KRMK           (((volatile __near __bitf_T *)0xFFE7)->no2)
#define PMK9           (((volatile __near __bitf_T *)0xFFE7)->no5)
#define PMK10          (((volatile __near __bitf_T *)0xFFE7)->no6)
#define PMK11          (((volatile __near __bitf_T *)0xFFE7)->no7)
#define PR00           (*(volatile __near unsigned short *)0xFFE8)
#define PR00L          (*(volatile __near unsigned char  *)0xFFE8)
#define PR00L_bit      (*(volatile __near __bitf_T *)0xFFE8)
#define PR00H          (*(volatile __near unsigned char  *)0xFFE9)
#define PR00H_bit      (*(volatile __near __bitf_T *)0xFFE9)
#define WDTIPR0        (((volatile __near __bitf_T *)0xFFE8)->no0)
#define LVIPR0         (((volatile __near __bitf_T *)0xFFE8)->no1)
#define PPR00          (((volatile __near __bitf_T *)0xFFE8)->no2)
#define PPR01          (((volatile __near __bitf_T *)0xFFE8)->no3)
#define PPR02          (((volatile __near __bitf_T *)0xFFE8)->no4)
#define PPR03          (((volatile __near __bitf_T *)0xFFE8)->no5)
#define PPR04          (((volatile __near __bitf_T *)0xFFE8)->no6)
#define PPR05          (((volatile __near __bitf_T *)0xFFE8)->no7)
#define CSIPR000       (((volatile __near __bitf_T *)0xFFE9)->no1)
#define IICPR000       (((volatile __near __bitf_T *)0xFFE9)->no1)
#define STPR00         (((volatile __near __bitf_T *)0xFFE9)->no1)
#define SRPR00         (((volatile __near __bitf_T *)0xFFE9)->no2)
#define SREPR00        (((volatile __near __bitf_T *)0xFFE9)->no5)
#define TMPR000        (((volatile __near __bitf_T *)0xFFE9)->no6)
#define CSIPR010       (((volatile __near __bitf_T *)0xFFE9)->no7)
#define IICPR010       (((volatile __near __bitf_T *)0xFFE9)->no7)
#define STPR01         (((volatile __near __bitf_T *)0xFFE9)->no7)
#define PR01           (*(volatile __near unsigned short *)0xFFEA)
#define PR01L          (*(volatile __near unsigned char  *)0xFFEA)
#define PR01L_bit      (*(volatile __near __bitf_T *)0xFFEA)
#define PR01H          (*(volatile __near unsigned char  *)0xFFEB)
#define PR01H_bit      (*(volatile __near __bitf_T *)0xFFEB)
#define CSIPR011       (((volatile __near __bitf_T *)0xFFEA)->no0)
#define IICPR011       (((volatile __near __bitf_T *)0xFFEA)->no0)
#define SRPR01         (((volatile __near __bitf_T *)0xFFEA)->no0)
#define SREPR01        (((volatile __near __bitf_T *)0xFFEA)->no1)
#define IICAPR00       (((volatile __near __bitf_T *)0xFFEA)->no2)
#define TMPR001H       (((volatile __near __bitf_T *)0xFFEA)->no3)
#define TMPR003H       (((volatile __near __bitf_T *)0xFFEA)->no4)
#define TMPR001        (((volatile __near __bitf_T *)0xFFEA)->no5)
#define TMPR002        (((volatile __near __bitf_T *)0xFFEA)->no6)
#define TMPR003        (((volatile __near __bitf_T *)0xFFEA)->no7)
#define ADPR0          (((volatile __near __bitf_T *)0xFFEB)->no0)
#define TMKAPR0        (((volatile __near __bitf_T *)0xFFEB)->no1)
#define KRPR0          (((volatile __near __bitf_T *)0xFFEB)->no2)
#define PPR09          (((volatile __near __bitf_T *)0xFFEB)->no5)
#define PPR010         (((volatile __near __bitf_T *)0xFFEB)->no6)
#define PPR011         (((volatile __near __bitf_T *)0xFFEB)->no7)
#define PR10           (*(volatile __near unsigned short *)0xFFEC)
#define PR10L          (*(volatile __near unsigned char  *)0xFFEC)
#define PR10L_bit      (*(volatile __near __bitf_T *)0xFFEC)
#define PR10H          (*(volatile __near unsigned char  *)0xFFED)
#define PR10H_bit      (*(volatile __near __bitf_T *)0xFFED)
#define WDTIPR1        (((volatile __near __bitf_T *)0xFFEC)->no0)
#define LVIPR1         (((volatile __near __bitf_T *)0xFFEC)->no1)
#define PPR10          (((volatile __near __bitf_T *)0xFFEC)->no2)
#define PPR11          (((volatile __near __bitf_T *)0xFFEC)->no3)
#define PPR12          (((volatile __near __bitf_T *)0xFFEC)->no4)
#define PPR13          (((volatile __near __bitf_T *)0xFFEC)->no5)
#define PPR14          (((volatile __near __bitf_T *)0xFFEC)->no6)
#define PPR15          (((volatile __near __bitf_T *)0xFFEC)->no7)
#define CSIPR100       (((volatile __near __bitf_T *)0xFFED)->no1)
#define IICPR100       (((volatile __near __bitf_T *)0xFFED)->no1)
#define STPR10         (((volatile __near __bitf_T *)0xFFED)->no1)
#define SRPR10         (((volatile __near __bitf_T *)0xFFED)->no2)
#define SREPR10        (((volatile __near __bitf_T *)0xFFED)->no5)
#define TMPR100        (((volatile __near __bitf_T *)0xFFED)->no6)
#define CSIPR110       (((volatile __near __bitf_T *)0xFFED)->no7)
#define IICPR110       (((volatile __near __bitf_T *)0xFFED)->no7)
#define STPR11         (((volatile __near __bitf_T *)0xFFED)->no7)
#define PR11           (*(volatile __near unsigned short *)0xFFEE)
#define PR11L          (*(volatile __near unsigned char  *)0xFFEE)
#define PR11L_bit      (*(volatile __near __bitf_T *)0xFFEE)
#define PR11H          (*(volatile __near unsigned char  *)0xFFEF)
#define PR11H_bit      (*(volatile __near __bitf_T *)0xFFEF)
#define CSIPR111       (((volatile __near __bitf_T *)0xFFEE)->no0)
#define IICPR111       (((volatile __near __bitf_T *)0xFFEE)->no0)
#define SRPR11         (((volatile __near __bitf_T *)0xFFEE)->no0)
#define SREPR11        (((volatile __near __bitf_T *)0xFFEE)->no1)
#define IICAPR10       (((volatile __near __bitf_T *)0xFFEE)->no2)
#define TMPR101H       (((volatile __near __bitf_T *)0xFFEE)->no3)
#define TMPR103H       (((volatile __near __bitf_T *)0xFFEE)->no4)
#define TMPR101        (((volatile __near __bitf_T *)0xFFEE)->no5)
#define TMPR102        (((volatile __near __bitf_T *)0xFFEE)->no6)
#define TMPR103        (((volatile __near __bitf_T *)0xFFEE)->no7)
#define ADPR1          (((volatile __near __bitf_T *)0xFFEF)->no0)
#define TMKAPR1        (((volatile __near __bitf_T *)0xFFEF)->no1)
#define KRPR1          (((volatile __near __bitf_T *)0xFFEF)->no2)
#define PPR19          (((volatile __near __bitf_T *)0xFFEF)->no5)
#define PPR110         (((volatile __near __bitf_T *)0xFFEF)->no6)
#define PPR111         (((volatile __near __bitf_T *)0xFFEF)->no7)
#define MACRL          (*(volatile __near unsigned short *)0xFFF0)
#define MACRH          (*(volatile __near unsigned short *)0xFFF2)
#define PMC            (*(volatile __near unsigned char  *)0xFFFE)
#define PMC_bit        (*(volatile __near __bitf_T *)0xFFFE)
#define MAA            (((volatile __near __bitf_T *)0xFFFE)->no0)


#define INTSRO                          0x0004
#define INTWDTI                         0x0004
#define INTLVI                          0x0006
#define INTP0                           0x0008
#define INTP1                           0x000A
#define INTP2                           0x000C
#define INTP3                           0x000E
#define INTP4                           0x0010
#define INTP5                           0x0012
#define INTCSI00                        0x0016
#define INTIIC00                        0x0016
#define INTST0                          0x0016
#define INTSR0                          0x0018
#define INTSRE0                         0x001E
#define INTTM00                         0x0020
#define INTCSI10                        0x0022
#define INTIIC10                        0x0022
#define INTST1                          0x0022
#define INTCSI11                        0x0024
#define INTIIC11                        0x0024
#define INTSR1                          0x0024
#define INTSRE1                         0x0026
#define INTIICA0                        0x0028
#define INTTM01H                        0x002A
#define INTTM03H                        0x002C
#define INTTM01                         0x002E
#define INTTM02                         0x0030
#define INTTM03                         0x0032
#define INTAD                           0x0034
#define INTIT                           0x0036
#define INTKR                           0x0038
#define INTP9                           0x003E
#define INTP10                          0x0040
#define INTP11                          0x0042
#define INTCMP0                         0x0044
#define INTCMP1                         0x0046
#define INTDOC                          0x0048
#define INTIT00                         0x004A
#define INTIT01                         0x004C
#define INTTMKB0                        0x004E
#define INTIICA1                        0x0050
#define INTFL                           0x0052
#define INTFO                           0x0054

#endif
